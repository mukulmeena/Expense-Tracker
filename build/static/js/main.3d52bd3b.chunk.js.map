{"version":3,"sources":["components/Expenses/expenseFilter.js","components/Expenses/ExpenseDate.js","components/UI/card.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpenseList.js","components/Chart/Chartbar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/newExpenses/expenseForm.js","components/newExpenses/newExpenses.js","App.js","index.js"],"names":["ExpenseFilter","props","className","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItems","title","amount","ExpenseList","items","length","map","expense","id","Chartbar","barFillHeight","maxVal","Math","round","style","height","label","Chart","dataPointValue","dataPoints","datapoint","maxval","max","dataPoint","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","enteredFilter","setEnteredFilter","filteredExpense","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","Date","onChangeExpenses","type","min","step","onClick","onCancel","NewExpenses","isEditing","setIsEditing","changeEditingHandler","prevState","newExpense","random","onChangeExpense","dummy_expenses","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"ibAwBeA,EArBO,SAACC,GAMrB,OACE,qBAAKC,UAAU,iBAAgB,SAC7B,sBAAKA,UAAU,yBAAwB,UACrC,mDACA,yBAAQC,MAAOF,EAAMG,SAAUC,SART,SAACC,GAC3BL,EAAMM,eAAeD,EAAME,OAAOL,MACpC,EAMoED,UAAU,cAAa,UACnF,wBAAQC,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,OAAM,yBAK9B,E,kBCJeM,MAhBf,SAAqBR,GACnB,IAAMS,EAAQT,EAAMU,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMZ,EAAMU,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOb,EAAMU,KAAKI,cAExB,OACE,8BACE,sBAAKb,UAAU,mBAAkB,UAC/B,qBAAKA,UAAU,QAAO,SAAEQ,IACxB,qBAAKR,UAAU,OAAM,SAAEY,IACvB,qBAAKZ,UAAU,MAAK,SAAEW,QAI9B,E,MCPeG,MAPf,SAAcf,GACV,IAAMgB,EAAU,QAAUhB,EAAMC,UAChC,OACI,qBAAKA,UAAWe,EAAQ,SAAEhB,EAAMiB,UAExC,ECWeC,MAdf,SAAsBlB,GACpB,OACE,6BACE,eAAC,EAAI,CAACC,UAAU,eAAc,UAC5B,cAAC,EAAW,CAACS,KAAMV,EAAMU,OACzB,sBAAKT,UAAU,2BAA0B,UACvC,6BAAKD,EAAMmB,QACX,sBAAKlB,UAAU,qBAAoB,cAAGD,EAAMoB,iBAKtD,ECUeC,EAtBK,SAACrB,GACnB,OAA2B,IAAvBA,EAAMsB,MAAMC,OAEZ,qBAAKtB,UAAU,aAAY,gDAI7B,oBAAIA,UAAU,eAAc,SACzBD,EAAMsB,MAAME,KAAI,SAACC,GAChB,OACE,cAAC,EAAY,CAEXN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBV,KAAMe,EAAQf,MAHTe,EAAQC,GAMnB,KAGN,E,OCFeC,G,MAnBE,SAAC3B,GAChB,IAAI4B,EAAgB,KAKpB,OAHI5B,EAAM6B,OAAS,IACjBD,EAAgBE,KAAKC,MAAO/B,EAAME,MAAQF,EAAM6B,OAAU,KAAO,KAGjE,sBAAK5B,UAAU,YAAW,UACxB,qBAAKA,UAAU,uBAAsB,SACnC,qBACEA,UAAU,kBACV+B,MAAO,CAAEC,OAAQL,OAGrB,qBAAK3B,UAAU,mBAAkB,SAAED,EAAMkC,UAG/C,GCEeC,G,MAlBD,SAACnC,GACX,IAAMoC,EAAiBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUpC,KAAK,IAClEqC,EAAQT,KAAKU,IAAG,MAARV,KAAI,YAAQM,IAE5B,OACE,qBAAKnC,UAAU,QAAO,SACnBD,EAAMqC,WAAWb,KAAI,SAACiB,GAAS,OAC9B,cAAC,EAAQ,CAEPvC,MAAOuC,EAAUvC,MACjB2B,OAAQU,EACRL,MAAOO,EAAUP,OAHZO,EAAUP,MAIf,KAIV,GCMeQ,EAvBM,SAAC1C,GACpB,IAeoC,EAf9B2C,EAAkB,CACtB,CAAET,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,GACvB,CAAEgC,MAAO,MAAOhC,MAAO,IACvB,cAEoBF,EAAM4C,UAAQ,IAApC,2BAAsC,CAAC,IAA5BnB,EAAO,QAEhBkB,EADgBlB,EAAQf,KAAKmC,YACF3C,OAASuB,EAAQL,MAC9C,CAAC,+BACD,OAAO,cAAC,EAAK,CAACiB,WAAYM,GAC5B,E,MCOeG,MAvBf,SAAkB9C,GAChB,MAA0C+C,mBAAS,QAAO,mBAAnDC,EAAa,KAAEC,EAAgB,KAMhCC,EAAkBlD,EAAMsB,MAAM6B,QAAO,SAAC1B,GAC1C,OAAOA,EAAQf,KAAKI,cAAcsC,aAAeJ,CACnD,IAEA,OACE,eAAC,EAAI,CAAC/C,UAAU,WAAU,UACxB,cAAC,EAAa,CACZE,SAAU6C,EACV1C,eAZsB,SAAC+C,GAC3BJ,EAAiBI,EACnB,IAYI,cAAC,EAAY,CAACT,SAAUM,IACxB,cAAC,EAAW,CAAC5B,MAAO4B,MAG1B,E,aCgDeI,MA1Ef,SAAqBtD,GACnB,MAAwC+C,mBAAS,IAAG,mBAA7CQ,EAAY,KAAEC,EAAe,KACpC,EAA0CT,mBAAS,IAAG,mBAA/CU,EAAa,KAAEC,EAAgB,KACtC,EAAsCX,mBAAS,IAAG,mBAA3CY,EAAW,KAAEC,EAAc,KA2BlC,OACE,uBAAMC,SAdc,SAACxD,GACrBA,EAAMyD,iBACN,IAAMlB,EAAW,CACfzB,MAAOoC,EACPnC,OAAQqC,EACR/C,KAAM,IAAIqD,KAAKJ,IAEjB3D,EAAMgE,iBAAiBpB,GACvBY,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,GACjB,EAGgC,UAC5B,sBAAK3D,UAAU,oBAAmB,UAChC,sBAAKA,UAAU,uBAAsB,UACnC,0CACA,uBACEgE,KAAK,OACL/D,MAAOqD,EACPnD,SAjCiB,SAACC,GAC1BmD,EAAgBnD,EAAME,OAAOL,MAC/B,OAkCM,sBAAKD,UAAU,uBAAsB,UACnC,2CACA,uBACEgE,KAAK,SACL/D,MAAOuD,EACPS,IAAI,OACJC,KAAK,OACL/D,SAvCkB,SAACC,GAC3BqD,EAAiBrD,EAAME,OAAOL,MAChC,OAwCM,sBAAKD,UAAU,uBAAsB,UACnC,yCACA,uBACEgE,KAAK,OACL/D,MAAOyD,EACPO,IAAI,aACJ1B,IAAI,aACJpC,SA7CgB,SAACC,GACzBuD,EAAevD,EAAME,OAAOL,MAC9B,UA+CI,sBAAKD,UAAU,mBAAkB,UAC/B,wBAAQmE,QAASpE,EAAMqE,SAAWpE,UAAU,WAAU,oBAGtD,wBAAQgE,KAAK,SAAShE,UAAU,WAAU,8BAMlD,E,MCvCeqE,MA/Bf,SAAqBtE,GACnB,MAAkC+C,oBAAS,GAAM,mBAA1CwB,EAAS,KAAEC,EAAY,KAWxBC,EAAuB,WAC3BD,GAAa,SAACE,GAAS,OAAMA,CAAS,GACxC,EAEA,OACE,eAAC,EAAI,CAACzE,UAAU,aAAY,WACxBsE,GACA,wBAAQH,QAASK,EAAqB,6BAEvCF,GACC,cAAC,EAAW,CACVF,SAAUI,EACVT,iBArBqB,SAACvC,GAC5B,IAAMkD,EAAU,2BACXlD,GAAO,IACVC,GAAII,KAAK8C,SAASxB,aAEpBpD,EAAM6E,gBAAgBF,GACtBH,GAAa,EACf,MAmBF,EC9BMM,EAAiB,CACrB,CACEpD,GAAI,KACJP,MAAO,eACPC,OAAQ,MACRV,KAAM,IAAIqD,KAAK,KAAM,EAAG,KAE1B,CAAErC,GAAI,KAAMP,MAAO,SAAUC,OAAQ,OAAQV,KAAM,IAAIqD,KAAK,KAAM,EAAG,KACrE,CACErC,GAAI,KACJP,MAAO,gBACPC,OAAQ,OACRV,KAAM,IAAIqD,KAAK,KAAM,EAAG,KAE1B,CACErC,GAAI,KACJP,MAAO,oBACPC,OAAQ,IACRV,KAAM,IAAIqD,KAAK,KAAM,EAAG,MA+BbgB,MA3Bf,WAEE,MAAgChC,mBAAS+B,GAAe,mBAAjDlC,EAAQ,KAAEoC,EAAW,KAQ5B,OACE,gCACE,cAAC,EAAW,CAACH,gBARY,SAACpD,GAC5BuD,GAAY,SAAAC,GACV,MAAM,CAAExD,GAAO,mBAAKwD,GACtB,GACF,IAKI,cAAC,EAAQ,CAAC3D,MAAOsB,MAYvB,EC9CasC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAG,I","file":"static/js/main.3d52bd3b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./expenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n\r\n  const filterChangehandler = (event) => {\r\n    props.onChangeFilter(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"expense-filter\">\r\n      <div className=\"expenseFilter-controls\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterChangehandler} className=\"year-select\">\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-us\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-us\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"expense-calender\">\r\n        <div className=\"month\">{month}</div>\r\n        <div className=\"year\">{year}</div>\r\n        <div className=\"day\">{day}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./card.css\"\r\n\r\nfunction Card(props) {\r\n    const classes = \"card \" + props.className\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card","import \"./ExpenseItems.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/card\";\r\n\r\nfunction ExpenseItems(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item-description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item-price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItems;\r\n","import React from \"react\";\r\nimport \"./ExpenseList.css\";\r\nimport ExpenseItems from \"./ExpenseItems\";\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"no-expense\">Looks like you&apos;ve got no expenses!</div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"Expense-list\">\r\n      {props.items.map((expense) => {\r\n        return (\r\n          <ExpenseItems\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          ></ExpenseItems>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./Chartbar.css\";\r\n\r\nconst Chartbar = (props) => {\r\n  var barFillHeight = \"0%\";\r\n\r\n  if (props.maxVal > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxVal) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__fill__box\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chartbar;\r\n","import React from \"react\";\r\nimport Chartbar from \"./Chartbar\";\r\nimport \"./Chart.css\"\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValue = props.dataPoints.map(datapoint => datapoint.value)\r\n    const maxval= Math.max(...dataPointValue)\r\n\r\n  return (\r\n    <div className=\"Chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <Chartbar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxVal={maxval}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    var currMonth = expense.date.getMonth();\r\n    chartDataPoints[currMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import ExpenseFilter from \"./expenseFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpenseChart from \"./ExpensesChart\"\r\nimport Card from \"../UI/card\";\r\n\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Expenses(props) {\r\n  const [enteredFilter, setEnteredFilter] = useState(\"2020\");\r\n\r\n  const filterChangehandler = (selectedYear) => {\r\n    setEnteredFilter(selectedYear);\r\n  };\r\n\r\n  const filteredExpense = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === enteredFilter;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={enteredFilter}\r\n        onChangeFilter={filterChangehandler}\r\n      />\r\n      <ExpenseChart expenses={filteredExpense}/>\r\n      <ExpenseList items={filteredExpense} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./expenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenses = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onChangeExpenses(expenses);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expenses-form\">\r\n        <div className=\"new-expense-controls\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense-controls\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense-controls\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expenses-btn\">\r\n        <button onClick={props.onCancel}  className=\"btn-form\">\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className=\"btn-form\">\r\n          Add Expense\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/card\";\r\nimport ExpenseForm from \"./expenseForm\";\r\nimport \"./newExpenses.css\";\r\n\r\nfunction NewExpenses(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const expenseChangehandler = (expense) => {\r\n    const newExpense = {\r\n      ...expense,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onChangeExpense(newExpense);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const changeEditingHandler = () => {\r\n    setIsEditing((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"newExpense\">\r\n      {!isEditing && (\r\n        <button onClick={changeEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onCancel={changeEditingHandler}\r\n          onChangeExpenses={expenseChangehandler}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default NewExpenses;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpenses from \"./components/newExpenses/newExpenses\";\n\nconst dummy_expenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  \n  const [expenses, setExpenses] = useState(dummy_expenses)\n\n  const expenseChangehandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    })\n  }\n  \n  return (\n    <div>\n      <NewExpenses onChangeExpense={expenseChangehandler}/>\n      <Expenses items={expenses} />\n    </div>\n  );\n\n\n  // React transfrom the JSX code into below code and send it to browser.(Under the hood)\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, 'Lets get started'),\n  //   React.createElement(Expenses, {items: {expenses}})\n  // );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}